# Generated by Django 5.1.2 on 2025-01-19 13:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direccion', models.CharField(max_length=500)),
                ('telefono', models.CharField(max_length=9)),
                ('email', models.EmailField(default='nombre@ejemplo.com', max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dni', models.CharField(max_length=9, unique=True)),
                ('nombre', models.CharField(max_length=150)),
                ('apellidos', models.CharField(max_length=300)),
                ('email', models.EmailField(default='nombre@ejemplo.com', max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Gerente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dni', models.CharField(max_length=9, unique=True)),
                ('nombre', models.CharField(max_length=150)),
                ('apellidos', models.CharField(max_length=300)),
                ('telefono', models.CharField(max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Pelicula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=500)),
                ('director', models.CharField(max_length=300)),
                ('sinopsis', models.TextField(null=True)),
                ('fechaLanzamiento', models.DateField(default=django.utils.timezone.now)),
                ('tiempoProyectada', models.DurationField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('direccion', models.CharField(max_length=500)),
                ('telefono', models.CharField(max_length=9)),
                ('web', models.URLField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dni', models.CharField(max_length=9, unique=True)),
                ('nombre', models.CharField(max_length=150)),
                ('apellidos', models.CharField(max_length=300)),
                ('nuss', models.CharField(max_length=12, unique=True)),
                ('iban', models.CharField(max_length=24, unique=True)),
                ('salario', models.IntegerField(default=1100)),
                ('encargado', models.BooleanField(default=False)),
                ('cine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empleados_cine', to='GestionCine.cine')),
            ],
        ),
        migrations.AddField(
            model_name='cine',
            name='gerente',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='GestionCine.gerente'),
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
                ('tipo', models.CharField(choices=[('co', 'comida'), ('be', 'bebida')], default='co', max_length=2)),
                ('fechaCaducidad', models.DateField(default=django.utils.timezone.now)),
                ('cliente', models.ManyToManyField(related_name='productos_cliente', to='GestionCine.cliente')),
                ('proveedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productos_proveedor', to='GestionCine.proveedor')),
            ],
        ),
        migrations.CreateModel(
            name='Proyeccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hora', models.DateTimeField(default=django.utils.timezone.now)),
                ('pelicula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proyecciones_pelicula', to='GestionCine.pelicula')),
            ],
        ),
        migrations.CreateModel(
            name='Entrada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechaCompra', models.DateTimeField(default=django.utils.timezone.now)),
                ('cliente', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='entradas_cliente', to='GestionCine.cliente')),
                ('proyeccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entradas_proyeccion', to='GestionCine.proyeccion')),
            ],
        ),
        migrations.CreateModel(
            name='Sala',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tamano', models.CharField(choices=[('PE', 'Pequena'), ('ME', 'Mediana'), ('GR', 'Grande')], default='ME', max_length=2)),
                ('cine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salas_cine', to='GestionCine.cine')),
                ('empleado', models.ManyToManyField(related_name='salas_empleado', to='GestionCine.empleado')),
            ],
        ),
        migrations.AddField(
            model_name='proyeccion',
            name='sala',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proyecciones_sala', to='GestionCine.sala'),
        ),
        migrations.AddField(
            model_name='pelicula',
            name='sala',
            field=models.ManyToManyField(related_name='peliculas_sala', to='GestionCine.sala'),
        ),
        migrations.CreateModel(
            name='Socio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numSocio', models.CharField(max_length=5, unique=True)),
                ('fechaAlta', models.DateField(default=django.utils.timezone.now)),
                ('fechaCaducidad', models.DateField(default=django.utils.timezone.now)),
                ('cliente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='socios_cliente', to='GestionCine.cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.PositiveSmallIntegerField(choices=[(2, 'cliente'), (3, 'empleado'), (4, 'gerente')], default=2)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='gerente',
            name='usuario',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gerentes_usuario', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='empleado',
            name='usuario',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='empleados_usuario', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cliente',
            name='usuario',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clientes_usuario', to=settings.AUTH_USER_MODEL),
        ),
    ]
